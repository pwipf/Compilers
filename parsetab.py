
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '608F1358CE7563E173106E127414C6C0'
    
_lr_action_items = {'INTLITERAL':([56,76,78,80,81,86,88,90,102,110,111,112,115,116,117,118,119,120,121,130,131,132,134,143,145,],[-7,-7,-44,-7,-7,-7,100,-47,-7,-43,-62,-63,-75,-77,-7,-76,-74,-72,-73,-64,-65,-46,-7,-44,-7,]),'RETURN':([11,12,13,23,24,32,49,51,53,58,60,62,64,66,67,68,72,73,74,82,83,85,91,114,122,123,124,125,128,135,137,138,139,],[-7,-7,-6,-5,-4,-10,-8,-7,56,-34,-36,-33,-7,-35,56,-7,-31,-30,-32,-37,56,56,-41,-79,-80,-78,-7,-70,-67,-39,56,-66,-40,]),'READ':([11,12,13,23,24,32,49,51,53,58,60,62,64,66,67,68,72,73,74,82,83,85,91,114,122,123,124,125,128,135,137,138,139,],[-7,-7,-6,-5,-4,-10,-8,-7,57,-34,-36,-33,-7,-35,57,-7,-31,-30,-32,-37,57,57,-41,-79,-80,-78,-7,-70,-67,-39,57,-66,-40,]),'VOID':([15,],[27,]),'STRINGLITERAL':([31,],[41,]),'WHILE':([11,12,13,23,24,32,49,51,53,58,60,62,64,66,67,68,72,73,74,82,83,85,91,114,122,123,124,125,128,135,137,138,139,],[-7,-7,-6,-5,-4,-10,-8,-7,59,-34,-36,-33,-7,-35,59,-7,-31,-30,-32,-37,59,59,-41,-79,-80,-78,-7,-70,-67,-39,59,-66,-40,]),'PROGRAM':([0,],[2,]),'FLOATLITERAL':([56,76,78,80,81,86,88,90,102,110,111,112,115,116,117,118,119,120,121,130,131,132,134,143,145,],[-7,-7,-44,-7,-7,-7,105,-47,-7,-43,-62,-63,-75,-77,-7,-76,-74,-72,-73,-64,-65,-46,-7,-44,-7,]),'BEGIN':([3,4,45,],[-2,5,51,]),'NOT_EQUAL':([3,89,94,100,101,103,104,105,106,107,108,109,140,148,],[-2,-42,115,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'GREATER_EQUAL':([3,89,94,100,101,103,104,105,106,107,108,109,140,148,],[-2,-42,116,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),')':([3,22,30,34,35,38,39,40,43,44,46,48,50,52,55,89,92,93,98,99,100,101,103,104,105,106,107,108,109,133,134,136,140,141,142,143,146,147,148,149,150,],[-2,-7,-7,-17,-15,45,-7,-19,-7,-20,-18,-22,-16,-7,-21,-42,113,114,128,129,-59,-45,-49,-48,-60,-57,-61,-58,-56,140,-7,-71,-55,-7,148,-52,-54,-51,-50,-7,-53,]),'(':([3,18,36,56,57,59,69,71,76,78,80,81,86,88,90,102,107,110,111,112,115,116,117,118,119,120,121,130,131,132,134,143,145,],[-2,30,-26,-7,79,80,86,87,-7,-44,-7,-7,-7,102,-47,-7,134,-43,-62,-63,-75,-77,-7,-76,-74,-72,-73,-64,-65,-46,-7,-44,-7,]),'+':([3,89,100,101,103,104,105,106,107,108,109,140,148,],[-2,111,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'*':([3,100,101,103,104,105,106,107,108,109,140,148,],[-2,-59,130,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'-':([3,89,100,101,103,104,105,106,107,108,109,140,148,],[-2,112,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),',':([3,22,39,43,44,52,89,100,101,103,104,105,106,107,108,109,140,141,148,149,],[-2,33,47,33,-20,47,-42,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,145,-50,145,]),'/':([3,100,101,103,104,105,106,107,108,109,140,148,],[-2,-59,131,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),';':([3,21,22,34,35,41,42,43,50,63,77,89,95,100,101,103,104,105,106,107,108,109,113,129,140,148,],[-2,32,-7,-17,-15,-9,49,-7,-16,82,91,-42,-38,-59,-45,-49,-48,-60,-57,-61,-58,-56,135,139,-55,-50,]),'IDENTIFIER':([2,7,8,9,10,11,12,13,23,24,26,27,28,32,33,37,49,51,53,56,58,60,62,64,66,67,68,72,73,74,76,78,79,80,81,82,83,85,86,87,88,90,91,102,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,128,130,131,132,134,135,137,138,139,143,145,],[3,3,3,-12,-11,-7,-7,-6,-5,-4,-13,-14,3,-10,3,3,-8,-7,3,-7,-34,-36,-33,-7,-35,3,-7,-31,-30,-32,-7,-44,3,-7,-7,-37,3,3,-7,3,3,-47,-41,-7,-43,-62,-63,-79,-75,-77,-7,-76,-74,-72,-73,-80,-78,-7,-70,-67,-64,-65,-46,-7,-39,3,-66,-40,-44,-7,]),'=':([3,89,94,100,101,103,104,105,106,107,108,109,140,148,],[-2,-42,119,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'ASSIGN':([3,20,61,],[-2,31,81,]),'>':([3,89,94,100,101,103,104,105,106,107,108,109,140,148,],[-2,-42,121,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'FUNCTION':([5,6,11,12,13,16,23,24,32,49,75,],[-7,15,-7,-7,-6,15,-5,-4,-10,-8,-25,]),'END':([5,6,11,12,13,14,16,17,19,23,24,29,32,49,51,53,54,58,60,62,65,66,67,70,72,73,74,75,82,84,91,122,123,135,138,139,],[-7,-7,-7,-7,-6,25,-7,-3,-24,-5,-4,-23,-10,-8,-7,-7,75,-34,-36,-33,-29,-35,-7,-27,-31,-30,-32,-25,-37,-28,-41,-80,-78,-39,-66,-40,]),'STRING':([5,11,12,32,49,51,64,68,114,124,125,128,],[7,7,7,-10,-8,7,7,7,-79,7,-70,-67,]),'ELSE':([11,12,13,23,24,32,49,58,60,62,65,66,67,68,72,73,74,82,84,85,91,97,122,123,128,135,138,139,],[-7,-7,-6,-5,-4,-10,-8,-34,-36,-33,-29,-35,-7,-7,-31,-30,-32,-37,-28,-7,-41,125,-80,-78,-67,-39,-66,-40,]),'WRITE':([11,12,13,23,24,32,49,51,53,58,60,62,64,66,67,68,72,73,74,82,83,85,91,114,122,123,124,125,128,135,137,138,139,],[-7,-7,-6,-5,-4,-10,-8,-7,71,-34,-36,-33,-7,-35,71,-7,-31,-30,-32,-37,71,71,-41,-79,-80,-78,-7,-70,-67,-39,71,-66,-40,]),'ENDIF':([11,12,13,23,24,32,49,58,60,62,65,66,67,68,72,73,74,82,84,85,91,97,122,123,124,125,126,127,128,135,137,138,139,144,],[-7,-7,-6,-5,-4,-10,-8,-34,-36,-33,-29,-35,-7,-7,-31,-30,-32,-37,-28,-7,-41,-7,-80,-78,-7,-70,138,-69,-67,-39,-7,-66,-40,-68,]),'LESS_EQUAL':([3,89,94,100,101,103,104,105,106,107,108,109,140,148,],[-2,-42,118,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'IF':([11,12,13,23,24,32,49,51,53,58,60,62,64,66,67,68,72,73,74,82,83,85,91,114,122,123,124,125,128,135,137,138,139,],[-7,-7,-6,-5,-4,-10,-8,-7,69,-34,-36,-33,-7,-35,69,-7,-31,-30,-32,-37,69,69,-41,-79,-80,-78,-7,-70,-67,-39,69,-66,-40,]),'ENDWHILE':([11,12,13,23,24,32,49,58,60,62,64,65,66,67,72,73,74,82,83,84,91,96,114,122,123,135,138,139,],[-7,-7,-6,-5,-4,-10,-8,-34,-36,-33,-7,-29,-35,-7,-31,-30,-32,-37,-7,-28,-41,122,-79,-80,-78,-39,-66,-40,]),'INT':([5,11,12,15,30,32,47,49,51,64,68,114,124,125,128,],[9,9,9,9,9,-10,9,-8,9,9,9,-79,9,-70,-67,]),'FLOAT':([5,11,12,15,30,32,47,49,51,64,68,114,124,125,128,],[10,10,10,10,10,-10,10,-8,10,10,10,-79,10,-70,-67,]),'<':([3,89,94,100,101,103,104,105,106,107,108,109,140,148,],[-2,-42,120,-59,-45,-49,-48,-60,-57,-61,-58,-56,-55,-50,]),'$end':([1,25,],[0,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([5,11,12,51,64,68,124,],[6,23,24,53,83,85,137,]),'var_type':([5,11,12,15,30,47,51,64,68,124,],[8,8,8,26,37,37,8,8,8,8,]),'expr_list':([134,],[142,]),'param_decl_list':([30,],[38,]),'read_stmt':([53,67,83,85,137,],[58,58,58,58,58,]),'primary':([88,],[104,]),'start_else':([97,],[124,]),'id_tail':([22,43,],[35,50,]),'id_list':([8,79,87,],[21,92,99,]),'return_stmt':([53,67,83,85,137,],[60,60,60,60,60,]),'string_decl':([5,11,12,51,64,68,124,],[12,12,12,12,12,12,12,]),'expr_list_tail':([141,149,],[147,150,]),'id':([2,7,8,28,33,37,53,67,79,83,85,87,88,137,],[4,20,22,36,43,44,61,61,22,61,61,22,107,61,]),'idlit':([88,],[109,]),'postfix_expr':([88,],[101,]),'start_of_func':([6,16,],[18,18,]),'factor_prefix':([76,],[88,]),'compop':([94,],[117,]),'assign_stmt':([53,67,83,85,137,],[62,62,62,62,62,]),'param_decl_tail':([39,52,],[46,55,]),'program':([0,],[1,]),'assign_expr':([53,67,83,85,137,],[63,63,63,63,63,]),'factor':([76,],[89,]),'start_while':([53,67,83,85,137,],[64,64,64,64,64,]),'empty':([5,6,11,12,16,22,30,39,43,51,52,53,56,64,67,68,76,80,81,83,85,86,97,102,117,124,134,137,141,145,149,],[13,19,13,13,19,34,40,48,34,13,48,65,78,13,65,13,90,78,78,65,65,78,127,78,78,13,143,65,146,78,146,]),'write_stmt':([53,67,83,85,137,],[66,66,66,66,66,]),'addop':([89,],[110,]),'func_decl':([6,16,],[16,16,]),'mulop':([101,],[132,]),'floatlit':([88,],[108,]),'call_expr':([88,],[103,]),'end_while':([96,],[123,]),'stmt':([53,67,83,85,137,],[67,67,67,67,67,]),'func_declarations':([6,16,],[17,29,]),'else_part':([97,],[126,]),'any_type':([15,],[28,]),'intlit':([88,],[106,]),'param_decl':([30,47,],[39,52,]),'pgm_body':([5,],[14,]),'stmt_list':([53,67,83,85,137,],[70,84,96,97,144,]),'start_if':([53,67,83,85,137,],[68,68,68,68,68,]),'if_stmt':([53,67,83,85,137,],[72,72,72,72,72,]),'base_stmt':([53,67,83,85,137,],[73,73,73,73,73,]),'func_body':([51,],[54,]),'expr':([56,80,81,86,102,117,134,145,],[77,94,95,94,133,136,141,149,]),'expr_prefix':([56,80,81,86,102,117,134,145,],[76,76,76,76,76,76,76,76,]),'var_decl':([5,11,12,51,64,68,124,],[11,11,11,11,11,11,11,]),'while_stmt':([53,67,83,85,137,],[74,74,74,74,74,]),'str':([31,],[42,]),'cond':([80,86,],[93,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM id BEGIN pgm_body END','program',5,'p_program','glc.py',90),
  ('id -> IDENTIFIER','id',1,'p_id','glc.py',94),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_pgm_body','glc.py',98),
  ('decl -> string_decl decl','decl',2,'p_decl','glc.py',102),
  ('decl -> var_decl decl','decl',2,'p_decl','glc.py',103),
  ('decl -> empty','decl',1,'p_decl','glc.py',104),
  ('empty -> <empty>','empty',0,'p_empty','glc.py',108),
  ('string_decl -> STRING id ASSIGN str ;','string_decl',5,'p_string_decl','glc.py',112),
  ('str -> STRINGLITERAL','str',1,'p_str','glc.py',118),
  ('var_decl -> var_type id_list ;','var_decl',3,'p_var_decl','glc.py',123),
  ('var_type -> FLOAT','var_type',1,'p_var_type','glc.py',133),
  ('var_type -> INT','var_type',1,'p_var_type','glc.py',134),
  ('any_type -> var_type','any_type',1,'p_any_type','glc.py',138),
  ('any_type -> VOID','any_type',1,'p_any_type','glc.py',139),
  ('id_list -> id id_tail','id_list',2,'p_id_list','glc.py',143),
  ('id_tail -> , id id_tail','id_tail',3,'p_id_tail','glc.py',147),
  ('id_tail -> empty','id_tail',1,'p_id_tail','glc.py',148),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_param_decl_list','glc.py',155),
  ('param_decl_list -> empty','param_decl_list',1,'p_param_decl_list','glc.py',156),
  ('param_decl -> var_type id','param_decl',2,'p_param_decl','glc.py',160),
  ('param_decl_tail -> , param_decl param_decl_tail','param_decl_tail',3,'p_param_decl_tail','glc.py',165),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_param_decl_tail','glc.py',166),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_func_declarations','glc.py',170),
  ('func_declarations -> empty','func_declarations',1,'p_func_declarations','glc.py',171),
  ('func_decl -> start_of_func ( param_decl_list ) BEGIN func_body END','func_decl',7,'p_func_decl','glc.py',175),
  ('start_of_func -> FUNCTION any_type id','start_of_func',3,'p_start_of_func','glc.py',180),
  ('func_body -> decl stmt_list','func_body',2,'p_func_body','glc.py',188),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','glc.py',192),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','glc.py',193),
  ('stmt -> base_stmt','stmt',1,'p_stmt','glc.py',197),
  ('stmt -> if_stmt','stmt',1,'p_stmt','glc.py',198),
  ('stmt -> while_stmt','stmt',1,'p_stmt','glc.py',199),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_base_stmt','glc.py',203),
  ('base_stmt -> read_stmt','base_stmt',1,'p_base_stmt','glc.py',204),
  ('base_stmt -> write_stmt','base_stmt',1,'p_base_stmt','glc.py',205),
  ('base_stmt -> return_stmt','base_stmt',1,'p_base_stmt','glc.py',206),
  ('assign_stmt -> assign_expr ;','assign_stmt',2,'p_assign_stmt','glc.py',211),
  ('assign_expr -> id ASSIGN expr','assign_expr',3,'p_assign_expr','glc.py',215),
  ('read_stmt -> READ ( id_list ) ;','read_stmt',5,'p_read_stmt','glc.py',230),
  ('write_stmt -> WRITE ( id_list ) ;','write_stmt',5,'p_write_stmt','glc.py',237),
  ('return_stmt -> RETURN expr ;','return_stmt',3,'p_return_stmt','glc.py',246),
  ('expr -> expr_prefix factor','expr',2,'p_expr','glc.py',251),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expr_prefix','glc.py',294),
  ('expr_prefix -> empty','expr_prefix',1,'p_expr_prefix','glc.py',295),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_factor','glc.py',303),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_factor_prefix','glc.py',346),
  ('factor_prefix -> empty','factor_prefix',1,'p_factor_prefix','glc.py',347),
  ('postfix_expr -> primary','postfix_expr',1,'p_postfix_expr','glc.py',356),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_postfix_expr','glc.py',357),
  ('call_expr -> id ( expr_list )','call_expr',4,'p_call_expr','glc.py',363),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expr_list','glc.py',367),
  ('expr_list -> empty','expr_list',1,'p_expr_list','glc.py',368),
  ('expr_list_tail -> , expr expr_list_tail','expr_list_tail',3,'p_expr_list_tail','glc.py',372),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expr_list_tail','glc.py',373),
  ('primary -> ( expr )','primary',3,'p_primary','glc.py',377),
  ('primary -> idlit','primary',1,'p_primary','glc.py',378),
  ('primary -> intlit','primary',1,'p_primary','glc.py',379),
  ('primary -> floatlit','primary',1,'p_primary','glc.py',380),
  ('intlit -> INTLITERAL','intlit',1,'p_intlit','glc.py',389),
  ('floatlit -> FLOATLITERAL','floatlit',1,'p_floatlit','glc.py',395),
  ('idlit -> id','idlit',1,'p_idlit','glc.py',401),
  ('addop -> +','addop',1,'p_addop','glc.py',409),
  ('addop -> -','addop',1,'p_addop','glc.py',410),
  ('mulop -> *','mulop',1,'p_mulop','glc.py',417),
  ('mulop -> /','mulop',1,'p_mulop','glc.py',418),
  ('if_stmt -> start_if decl stmt_list else_part ENDIF','if_stmt',5,'p_if_stmt','glc.py',425),
  ('start_if -> IF ( cond )','start_if',4,'p_start_if','glc.py',431),
  ('else_part -> start_else decl stmt_list','else_part',3,'p_else_part','glc.py',440),
  ('else_part -> empty','else_part',1,'p_else_part','glc.py',441),
  ('start_else -> ELSE','start_else',1,'p_start_else','glc.py',450),
  ('cond -> expr compop expr','cond',3,'p_cond','glc.py',459),
  ('compop -> <','compop',1,'p_compop','glc.py',472),
  ('compop -> >','compop',1,'p_compop','glc.py',473),
  ('compop -> =','compop',1,'p_compop','glc.py',474),
  ('compop -> NOT_EQUAL','compop',1,'p_compop','glc.py',475),
  ('compop -> LESS_EQUAL','compop',1,'p_compop','glc.py',476),
  ('compop -> GREATER_EQUAL','compop',1,'p_compop','glc.py',477),
  ('while_stmt -> start_while decl stmt_list end_while','while_stmt',4,'p_while_stmt','glc.py',490),
  ('start_while -> WHILE ( cond )','start_while',4,'p_start_while','glc.py',496),
  ('end_while -> ENDWHILE','end_while',1,'p_end_while','glc.py',505),
]
